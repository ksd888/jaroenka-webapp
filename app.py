import streamlit as st
import pandas as pd
import datetime
import gspread
from google.oauth2 import service_account

# ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ GCP
credentials = service_account.Credentials.from_service_account_info(
    st.secrets["GCP_SERVICE_ACCOUNT"],
    scopes=["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
)
gc = gspread.authorize(credentials)
spreadsheet = gc.open("‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô‡∏õ‡∏•‡∏µ‡∏Å_GS")

# ‡πÇ‡∏´‡∏•‡∏î‡∏ä‡∏µ‡∏ó‡∏´‡∏•‡∏±‡∏Å
sheet_main = spreadsheet.worksheet("‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô")
sheet_sales = spreadsheet.worksheet("‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢")

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á Meta sheet
try:
    sheet_meta = spreadsheet.worksheet("Meta")
except gspread.exceptions.WorksheetNotFound:
    sheet_meta = spreadsheet.add_worksheet(title="Meta", rows=2, cols=1)
    sheet_meta.update("A1", "last_date")
    sheet_meta.update("A2", datetime.date.today().isoformat())

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î ‡∏´‡∏≤‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ß‡∏±‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå '‡πÄ‡∏Ç‡πâ‡∏≤' ‡πÅ‡∏•‡∏∞ '‡∏≠‡∏≠‡∏Å'
today = datetime.date.today().isoformat()
last_date = sheet_meta.acell("A2").value
if last_date != today:
    df = pd.DataFrame(sheet_main.get_all_records())
    if "‡πÄ‡∏Ç‡πâ‡∏≤" in df.columns and "‡∏≠‡∏≠‡∏Å" in df.columns:
        df["‡πÄ‡∏Ç‡πâ‡∏≤"] = 0
        df["‡∏≠‡∏≠‡∏Å"] = 0
        sheet_main.update([df.columns.values.tolist()] + df.values.tolist())
    sheet_meta.update("A2", today)

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
data = pd.DataFrame(sheet_main.get_all_records())
expected_cols = ["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", "‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ", "‡πÄ‡∏Ç‡πâ‡∏≤", "‡∏≠‡∏≠‡∏Å", "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢", "‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]
if not all(col in data.columns for col in expected_cols):
    st.error("‚ùå ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡∏µ‡∏ó")
    st.stop()

# ‡πÅ‡∏õ‡∏•‡∏á‡∏ä‡∏ô‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
for col in ["‡πÄ‡∏Ç‡πâ‡∏≤", "‡∏≠‡∏≠‡∏Å", "‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ"]:
    data[col] = pd.to_numeric(data[col], errors="coerce").fillna(0).astype(int)
data["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] = pd.to_numeric(data["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"], errors="coerce").fillna(0.0)
data["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"] = pd.to_numeric(data["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"], errors="coerce").fillna(0.0)

st.title("üì¶ ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏Ñ‡πâ‡∏≤")

# üîç ‡∏Ç‡∏≤‡∏¢‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
st.subheader("üõí ‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
selected_items = st.multiselect("‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", options=data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"])
quantities = {}
for item in selected_items:
    quantities[item] = st.number_input(f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {item}", min_value=0, step=1, key=f"qty_{item}")

amount_received = st.number_input("üíµ ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏°‡∏≤", min_value=0.0, step=1.0)
if st.button("‚úÖ ‡∏Ç‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î"):
    now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    total_price = 0.0
    receipt_lines = []

    for item, qty in quantities.items():
        if qty <= 0:
            continue
        idx = data[data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] == item].index[0]
        if data.at[idx, "‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ"] >= qty:
            data.at[idx, "‡∏≠‡∏≠‡∏Å"] += qty
            total = data.at[idx, "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] * qty
            profit = (data.at[idx, "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] - data.at[idx, "‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]) * qty
            sheet_sales.append_row([
                now, item, int(qty),
                float(data.at[idx, "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"]),
                float(data.at[idx, "‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]),
                float(data.at[idx, "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] - data.at[idx, "‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]),
                float(profit)
            ])
            total_price += total
            receipt_lines.append(f"{item} x {qty} = {total:.2f} ‡∏ö‡∏≤‡∏ó")
        else:
            st.warning(f"‚ùó ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ {item} ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏û‡∏≠")

    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô
    change = amount_received - total_price
    st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
    st.info(f"üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: {total_price:.2f} ‡∏ö‡∏≤‡∏ó\nüíµ ‡∏£‡∏±‡∏ö‡∏°‡∏≤: {amount_received:.2f} ‡∏ö‡∏≤‡∏ó\nüí∏ ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô: {change:.2f} ‡∏ö‡∏≤‡∏ó")

    # ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
    with st.expander("üßæ ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à"):
        st.markdown(f"üïì ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: `{now}`")
        for line in receipt_lines:
            st.write(line)
        st.write(f"üíµ ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô: `{total_price:.2f}` ‡∏ö‡∏≤‡∏ó")
        st.write(f"üí∏ ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô: `{amount_received:.2f}` ‡∏ö‡∏≤‡∏ó")
        st.write(f"üíµ ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô: `{change:.2f}` ‡∏ö‡∏≤‡∏ó")

    # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏¢‡∏≠‡∏î‡πÉ‡∏ô‡∏ä‡∏µ‡∏ó‡∏´‡∏•‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡πÄ‡∏ã‡∏ï
    data["‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ"] = data["‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ"] + data["‡πÄ‡∏Ç‡πâ‡∏≤"] - data["‡∏≠‡∏≠‡∏Å"]
    sheet_main.update([data.columns.values.tolist()] + data.values.tolist())
    st.success("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡∏µ‡∏ó‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")
    st.experimental_rerun()

# ‚ûï ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
st.subheader("üì• ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏ï‡∏π‡πâ")
fill_item = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", options=data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"], key="fill")
fill_qty = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡∏¥‡∏°", min_value=0, step=1, key="fill_qty")
if st.button("üìå ‡πÄ‡∏ï‡∏¥‡∏°"):
    idx = data[data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] == fill_item].index[0]
    data.at[idx, "‡πÄ‡∏Ç‡πâ‡∏≤"] += fill_qty
    data["‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ"] = data["‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ"] + data["‡πÄ‡∏Ç‡πâ‡∏≤"] - data["‡∏≠‡∏≠‡∏Å"]
    sheet_main.update([data.columns.values.tolist()] + data.values.tolist())
    st.success(f"‚úÖ ‡πÄ‡∏ï‡∏¥‡∏° {fill_item} ‡πÅ‡∏•‡πâ‡∏ß +{fill_qty}")
    st.experimental_rerun()

# üìã ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
st.subheader("üìä ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö")
st.dataframe(data)
