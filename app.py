import streamlit as st
import pandas as pd
import gspread
from google.oauth2 import service_account
from datetime import datetime

# ‡πÇ‡∏´‡∏•‡∏î credentials ‡∏à‡∏≤‡∏Å secrets.toml
credentials = service_account.Credentials.from_service_account_info(
    st.secrets["GCP_SERVICE_ACCOUNT"],
    scopes=["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
)

gc = gspread.authorize(credentials)
spreadsheet = gc.open("‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô‡∏õ‡∏•‡∏µ‡∏Å_GS")

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏µ‡∏ó‡∏´‡∏•‡∏±‡∏Å
sheet_main = spreadsheet.worksheet("‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô")
df = pd.DataFrame(sheet_main.get_all_records())

# ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ä‡∏µ‡∏ó "‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢"
try:
    sheet_sales = spreadsheet.worksheet("‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢")
except gspread.exceptions.WorksheetNotFound:
    sheet_sales = spreadsheet.add_worksheet(title="‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢", rows="1000", cols="20")
    sheet_sales.append_row(["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà", "‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢", "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢", "‡∏Å‡∏≥‡πÑ‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢", "‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°", "‡∏Å‡∏≥‡πÑ‡∏£‡∏£‡∏ß‡∏°"])

# ‡∏™‡πà‡∏ß‡∏ô UI
st.title("üíº ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô ‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏Ñ‡πâ‡∏≤")

# ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
search = st.text_input("üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")
filtered_df = df[df["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"].str.contains(search, case=False, na=False)]

for idx, row in filtered_df.iterrows():
    col1, col2, col3, col4 = st.columns([3, 1.2, 1.2, 1.5])
    with col1:
        st.markdown(f"**{row['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤']}**")
    with col2:
        qty = st.number_input(f"‡∏Ç‡∏≤‡∏¢ {row['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤']}", min_value=0, step=1, key=f"qty_{idx}")
    with col3:
        if st.button("üì¶ ‡∏Ç‡∏≤‡∏¢", key=f"sell_{idx}") and qty > 0:
            # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏ô‡∏ä‡∏µ‡∏ó‡∏´‡∏•‡∏±‡∏Å
            new_stock = max(0, row["‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠"] - qty)
            sheet_main.update_cell(idx + 2, df.columns.get_loc("‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠") + 1, new_stock)

            # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏ä‡∏µ‡∏ó‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢
            profit_per_unit = row["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] - row["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]
            total_sale = qty * row["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"]
            total_profit = qty * profit_per_unit
            now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            sheet_sales.append_row([now, row["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"], qty, row["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"], profit_per_unit, total_sale, total_profit])
            st.success(f"‚úÖ ‡∏Ç‡∏≤‡∏¢ {row['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤']} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {qty} ‡∏ä‡∏¥‡πâ‡∏ô ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")

    with col4:
        add = st.number_input(f"‡πÄ‡∏ï‡∏¥‡∏° {row['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤']}", min_value=0, step=1, key=f"add_{idx}")
        if st.button("üîÑ ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πä‡∏≠‡∏Å", key=f"addbtn_{idx}") and add > 0:
            updated_stock = row["‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠"] + add
            sheet_main.update_cell(idx + 2, df.columns.get_loc("‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠") + 1, updated_stock)
            st.success(f"‚úÖ ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πä‡∏≠‡∏Å {row['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤']} ‡πÄ‡∏û‡∏¥‡πà‡∏° {add} ‡∏ä‡∏¥‡πâ‡∏ô")

# ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÅ‡∏¢‡∏Å‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô `sheet_sales` ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠
