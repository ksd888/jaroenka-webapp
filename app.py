import streamlit as st
import pandas as pd
import datetime
import gspread
from google.oauth2 import service_account

# -- ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ GCP --
credentials = service_account.Credentials.from_service_account_info(
    st.secrets["GCP_SERVICE_ACCOUNT"],
    scopes=[
        "https://www.googleapis.com/auth/spreadsheets",
        "https://www.googleapis.com/auth/drive"
    ]
)
gc = gspread.authorize(credentials)
spreadsheet = gc.open("‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô‡∏õ‡∏•‡∏µ‡∏Å_GS")
sheet_main = spreadsheet.worksheet("‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô")
sheet_sales = spreadsheet.worksheet("‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢")
sheet_meta = spreadsheet.worksheet("Meta")  # ‡πÉ‡∏ä‡πâ‡πÄ‡∏Å‡πá‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î

# -- ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• --
data = pd.DataFrame(sheet_main.get_all_records())
meta = pd.DataFrame(sheet_meta.get_all_records())

# -- ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏¢‡∏≠‡∏î "‡πÄ‡∏Ç‡πâ‡∏≤" ‡πÅ‡∏•‡∏∞ "‡∏≠‡∏≠‡∏Å" ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô --
today = datetime.date.today().isoformat()
last_date = meta.at[0, "last_date"] if not meta.empty else ""
if last_date != today:
    data["‡πÄ‡∏Ç‡πâ‡∏≤"] = 0
    data["‡∏≠‡∏≠‡∏Å"] = 0
    sheet_main.update([data.columns.values.tolist()] + data.values.tolist())
    # update meta
    new_meta = pd.DataFrame([{"last_date": today}])
    sheet_meta.clear()
    sheet_meta.update([new_meta.columns.tolist()] + new_meta.values.tolist())
    st.experimental_rerun()

# -- ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• --
expected_cols = ["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", "‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ", "‡πÄ‡∏Ç‡πâ‡∏≤", "‡∏≠‡∏≠‡∏Å", "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢", "‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]
for col in ["‡πÄ‡∏Ç‡πâ‡∏≤","‡∏≠‡∏≠‡∏Å","‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ"]:
    data[col] = pd.to_numeric(data[col], errors="coerce").fillna(0).astype(int)
for col in ["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢","‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]:
    data[col] = pd.to_numeric(data[col], errors="coerce").fillna(0.0)

st.set_page_config(layout="wide")
st.title("üì¶ ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏Ñ‡πâ‡∏≤")

# -- ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≤‡∏¢‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ --
st.header("üõí ‡∏Ç‡∏≤‡∏¢‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
search_items = st.multiselect("‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", options=data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"].tolist())
quantities = {}
if search_items:
    for item in search_items:
        qty = st.number_input(f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡∏≤‡∏¢: {item}", min_value=0, step=1, key=f"qty_{item}")
        if qty > 0:
            quantities[item] = qty

cash = st.number_input("‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô (‡∏ö‡∏≤‡∏ó)", min_value=0.0, step=1.0, key="cash")
if st.button("üí∞ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢"):
    if not quantities:
        st.error("‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢")
    else:
        total_amt = sum(data.loc[data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"]==it, "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"].values[0] * q for it, q in quantities.items())
        total_profit = sum((data.loc[data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"]==it, "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"].values[0] - data.loc[data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"]==it, "‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"].values[0]) * q for it, q in quantities.items())
        change = cash - total_amt

        # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏£‡∏≤‡∏á main ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å sales log
        now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        sales_rows = []
        for it, q in quantities.items():
            idx = data[data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"]==it].index[0]
            price = float(data.at[idx, "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"])
            cost = float(data.at[idx, "‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"])
            prod_profit = (price - cost) * q
            data.at[idx, "‡∏≠‡∏≠‡∏Å"] += q
            sales_rows.append([now, it, int(q), price, cost, price-cost, prod_profit])
        sheet_main.update([data.columns.tolist()] + data.values.tolist())
        sheet_sales.append_rows(sales_rows)

        # ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
        st.success("‚úÖ ‡∏Ç‡∏≤‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        st.subheader("üßæ ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à")
        receipt = pd.DataFrame({
            "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤": list(quantities.keys()),
            "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô": list(quantities.values()),
            "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢": [data.loc[data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"]==it,"‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"].iloc[0] for it in quantities],
            "‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°": [quantities[it]*data.loc[data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"]==it,"‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"].iloc[0] for it in quantities]
        })
        st.table(receipt)
        st.write(f"**‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°:** {total_amt:,.2f} ‡∏ö‡∏≤‡∏ó")
        st.write(f"**‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô:** {cash:,.2f} ‡∏ö‡∏≤‡∏ó")
        st.write(f"**‡∏ó‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô:** {change:,.2f} ‡∏ö‡∏≤‡∏ó")
        st.write(f"**‡∏Å‡∏≥‡πÑ‡∏£‡∏£‡∏ß‡∏°:** {total_profit:,.2f} ‡∏ö‡∏≤‡∏ó")

        st.experimental_rerun()

# -- ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ --
st.header("‚ûï ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏ï‡πä‡∏≠‡∏Å")
with st.form("add_form"):
    prod = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"])
    aq = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡∏¥‡∏°", min_value=0, step=1)
    if st.form_submit_button("‚úÖ ‡πÄ‡∏ï‡∏¥‡∏°"):
        idx = data[data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"]==prod].index[0]
        data.at[idx, "‡πÄ‡∏Ç‡πâ‡∏≤"] += aq
        sheet_main.update([data.columns.tolist()] + data.values.tolist())
        st.success(f"‚úÖ ‡πÄ‡∏ï‡∏¥‡∏° {prod} +{aq}")
        st.experimental_rerun()

# -- ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ --
st.header("üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≥‡πÑ‡∏£‡πÅ‡∏•‡∏∞‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢")
data["‡∏Å‡∏≥‡πÑ‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢"] = data["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] - data["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]
data["‡∏Å‡∏≥‡πÑ‡∏£"] = data["‡∏≠‡∏≠‡∏Å"] * data["‡∏Å‡∏≥‡πÑ‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢"]
st.write(f"‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°: {(data['‡∏≠‡∏≠‡∏Å']*data['‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢']).sum():,.2f} ‡∏ö‡∏≤‡∏ó")
st.write(f"‡∏Å‡∏≥‡πÑ‡∏£‡∏£‡∏ß‡∏°: {data['‡∏Å‡∏≥‡πÑ‡∏£'].sum():,.2f} ‡∏ö‡∏≤‡∏ó")

# -- ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ --
st.header("üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")
st.dataframe(data)
