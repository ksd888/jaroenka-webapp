import streamlit as st
import gspread
from google.oauth2 import service_account
from datetime import datetime

# ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheet ‡∏î‡πâ‡∏ß‡∏¢ secrets
credentials = service_account.Credentials.from_service_account_info(
    st.secrets["GCP_SERVICE_ACCOUNT"],
    scopes=["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
)
gc = gspread.authorize(credentials)
spreadsheet = gc.open("‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô‡∏õ‡∏•‡∏µ‡∏Å_GS")
sheet = spreadsheet.worksheet("‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô")
log_sheet = spreadsheet.worksheet("‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢")  # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡∏ä‡∏µ‡∏ó
data = sheet.get_all_records()
product_names = [row["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] for row in data]

st.title("üßä ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô - ‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏Ñ‡πâ‡∏≤")

# ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
search = st.text_input("üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")
filtered_products = [p for p in product_names if search.lower() in p.lower()]

if not filtered_products:
    st.warning("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤")
else:
    selected_product = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", filtered_products)
    row_index = next(i for i, row in enumerate(data) if row["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] == selected_product)
    product = data[row_index]
    col_index = row_index + 2  # ‡∏ä‡∏î‡πÄ‡∏ä‡∏¢ header + index base 1

    st.markdown(f"**‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:** {selected_product}")
    st.write(f"‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢: {product['‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢']} ‡∏ö‡∏≤‡∏ó | ‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô: {product['‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô']} ‡∏ö‡∏≤‡∏ó")
    st.write(f"‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ: {product['‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠']}")

    # üîµ ‡∏õ‡∏∏‡πà‡∏°‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    sell_qty = st.number_input("‡∏Ç‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å (‡∏à‡∏≥‡∏ô‡∏ß‡∏ô)", min_value=0, step=1)
    if st.button("üì¶ ‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"):
        new_balance = max(product["‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠"] - sell_qty, 0)
        sheet.update_cell(col_index, product.keys().index("‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠") + 1, new_balance)
        st.success(f"‡∏Ç‡∏≤‡∏¢ {sell_qty} ‡∏ä‡∏¥‡πâ‡∏ô | ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà: {new_balance}")

        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏õ‡∏ä‡∏µ‡∏ó "‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢"
        now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        log_sheet.append_row([now, selected_product, sell_qty, product["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"], product["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"], (product["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] - product["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]) * sell_qty])

    # üîµ ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πä‡∏≠‡∏Å
    add_qty = st.number_input("‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤ (‡∏à‡∏≥‡∏ô‡∏ß‡∏ô)", min_value=0, step=1)
    if st.button("‚ûï ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πä‡∏≠‡∏Å"):
        new_balance = product["‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠"] + add_qty
        sheet.update_cell(col_index, product.keys().index("‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠") + 1, new_balance)
        st.success(f"‡πÄ‡∏ï‡∏¥‡∏° {add_qty} ‡∏ä‡∏¥‡πâ‡∏ô | ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà: {new_balance}")

    # üîµ ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
    edit_qty = st.number_input("‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÉ‡∏´‡∏°‡πà (‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠)", min_value=0, step=1)
    if st.button("‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"):
        sheet.update_cell(col_index, product.keys().index("‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠") + 1, edit_qty)
        st.success(f"‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô: {edit_qty}")
