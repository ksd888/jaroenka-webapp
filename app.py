import streamlit as st
import pandas as pd
import datetime
import gspread
from google.oauth2 import service_account

# --- ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheets ---
credentials = service_account.Credentials.from_service_account_info(
    st.secrets["GCP_SERVICE_ACCOUNT"],
    scopes=["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
)
gc = gspread.authorize(credentials)
spreadsheet = gc.open("‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô‡∏õ‡∏•‡∏µ‡∏Å_GS")
sheet_main = spreadsheet.worksheet("‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô")
sheet_sales = spreadsheet.worksheet("‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢")

# --- ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheet ---
data = pd.DataFrame(sheet_main.get_all_records())
for col in ["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", "‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ", "‡πÄ‡∏Ç‡πâ‡∏≤", "‡∏≠‡∏≠‡∏Å", "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢", "‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]:
    if col not in data.columns:
        st.error(f"‚ùå ‡∏Ç‡∏≤‡∏î‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå: {col}")
        st.stop()

data["‡πÄ‡∏Ç‡πâ‡∏≤"] = pd.to_numeric(data["‡πÄ‡∏Ç‡πâ‡∏≤"], errors="coerce").fillna(0).astype(int)
data["‡∏≠‡∏≠‡∏Å"] = pd.to_numeric(data["‡∏≠‡∏≠‡∏Å"], errors="coerce").fillna(0).astype(int)
data["‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ"] = pd.to_numeric(data["‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ"], errors="coerce").fillna(0).astype(int)
data["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] = pd.to_numeric(data["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"], errors="coerce").fillna(0)
data["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"] = pd.to_numeric(data["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"], errors="coerce").fillna(0)

st.set_page_config(page_title="‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏Ñ‡πâ‡∏≤", layout="wide")
st.title("üßä ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô - ‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏Ñ‡πâ‡∏≤")

# --- ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏Ç‡∏≤‡∏¢‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ---
st.subheader("üõí ‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")

selected_items = st.multiselect("‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", options=data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"])
quantities = {}
cols = st.columns(len(selected_items)) if selected_items else []

for i, item in enumerate(selected_items):
    with cols[i]:
        quantities[item] = st.number_input(f"{item}", min_value=0, step=1, key=f"qty_{item}")

if selected_items:
    sell_button = st.button("üí∞ ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å")
    money_received = st.number_input("üíµ ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô (‡∏ö‡∏≤‡∏ó)", min_value=0.0, step=1.0, format="%.2f", key="cash")

    if sell_button:
        now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        total = 0
        receipt = f"üßæ ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à ‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏Ñ‡πâ‡∏≤\n{now}\n-----------------------\n"

        for item, qty in quantities.items():
            if qty <= 0:
                continue
            idx = data[data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] == item].index[0]
            if data.at[idx, "‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ"] < qty:
                st.error(f"‚ùå {item} ‡∏°‡∏µ‡πÑ‡∏°‡πà‡∏û‡∏≠‡∏Ç‡∏≤‡∏¢ (‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {data.at[idx, '‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ']})")
                continue
            data.at[idx, "‡∏≠‡∏≠‡∏Å"] += qty
            data.at[idx, "‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ"] -= qty
            profit_per_unit = data.at[idx, "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] - data.at[idx, "‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]
            profit = profit_per_unit * qty
            price = data.at[idx, "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] * qty
            total += price
            sheet_sales.append_row([
                now, item, int(qty), float(data.at[idx, "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"]),
                float(data.at[idx, "‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]), float(profit_per_unit), float(profit)
            ])
            receipt += f"{item} x{qty} = {price:.2f}‡∏ø\n"

        change = money_received - total
        receipt += f"-----------------------\n‡∏£‡∏ß‡∏° {total:.2f}‡∏ø\n‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô {money_received:.2f}‡∏ø\n‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô {change:.2f}‡∏ø"
        st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
        st.text_area("üßæ ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à", receipt, height=250)

        # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Google Sheet ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        sheet_main.update([data.columns.values.tolist()] + data.values.tolist())

# --- ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏ï‡∏π‡πâ ---
st.subheader("‚ûï ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏ï‡∏π‡πâ")
col1, col2 = st.columns(2)
with col1:
    selected_add = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡∏¥‡∏°", data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"], key="add_item")
with col2:
    qty_add = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡∏¥‡∏°", min_value=0, step=1, key="add_qty")

if st.button("‚úÖ ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"):
    idx = data[data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] == selected_add].index[0]
    data.at[idx, "‡πÄ‡∏Ç‡πâ‡∏≤"] += qty_add
    data.at[idx, "‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ"] += qty_add
    sheet_main.update([data.columns.values.tolist()] + data.values.tolist())
    st.success(f"‚úÖ ‡πÄ‡∏ï‡∏¥‡∏° {selected_add} +{qty_add} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")

# --- ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ ---
data["‡∏Å‡∏≥‡πÑ‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢"] = data["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] - data["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]
data["‡∏Å‡∏≥‡πÑ‡∏£"] = data["‡∏≠‡∏≠‡∏Å"] * data["‡∏Å‡∏≥‡πÑ‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢"]
total_sales = (data["‡∏≠‡∏≠‡∏Å"] * data["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"]).sum()
total_profit = data["‡∏Å‡∏≥‡πÑ‡∏£"].sum()

st.subheader("üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ")
col1, col2 = st.columns(2)
col1.metric("‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°", f"{total_sales:,.2f} ‡∏ö‡∏≤‡∏ó")
col2.metric("‡∏Å‡∏≥‡πÑ‡∏£‡∏£‡∏ß‡∏°", f"{total_profit:,.2f} ‡∏ö‡∏≤‡∏ó")

# --- ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏£‡∏≤‡∏á ---
with st.expander("üì¶ ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"):
    st.dataframe(data, use_container_width=True)
