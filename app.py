import streamlit as st
import pandas as pd
import gspread
from google.oauth2.service_account import Credentials
from datetime import datetime
import re

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ key ‡∏ã‡πâ‡∏≥
def safe_key(s):
    return re.sub(r"[^a-zA-Z0-9_]", "_", s)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á float ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
def safe_float(val):
    try:
        return float(val)
    except:
        return 0.0

# ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheet
scope = [
    "https://www.googleapis.com/auth/spreadsheets",
    "https://www.googleapis.com/auth/drive"
]

credentials = Credentials.from_service_account_info(
    st.secrets["GCP_SERVICE_ACCOUNT"],
    scopes=scope
)

gc = gspread.authorize(credentials)
spreadsheet = gc.open_by_key("1HVA9mDcDmyxfKvxQd4V5ZkWh4niq33PwVGY6gwoKnAE")

sheet = spreadsheet.worksheet("‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô")

# ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheet
data = sheet.get_all_records()

# ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô DataFrame
df = pd.DataFrame(data)

# UI
st.title("‡πÅ‡∏≠‡∏õ‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏Ñ‡πâ‡∏≤ üçß")

# ‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
search = st.text_input("‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ üîç")
filtered_df = df[df["‡∏ä‡∏∑‡πà‡∏≠"].str.contains(search, case=False)] if search else df

# ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
st.subheader("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")
for i, row in filtered_df.iterrows():
    col1, col2, col3 = st.columns([3, 2, 2])
    with col1:
        st.markdown(f"**{row['‡∏ä‡∏∑‡πà‡∏≠']}**")
    with col2:
        qty_key = safe_key(f"qty_{row['‡∏ä‡∏∑‡πà‡∏≠']}")
        if qty_key not in st.session_state:
            st.session_state[qty_key] = 1
        if st.button("-", key=safe_key(f"sub_{row['‡∏ä‡∏∑‡πà‡∏≠']}")):
            st.session_state[qty_key] = max(1, st.session_state[qty_key] - 1)
        st.write(f"{st.session_state[qty_key]} ‡∏ä‡∏¥‡πâ‡∏ô")
        if st.button("+", key=safe_key(f"add_{row['‡∏ä‡∏∑‡πà‡∏≠']}")):
            st.session_state[qty_key] += 1
    with col3:
        if st.button("‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏™‡πà‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ üõí", key=safe_key(f"cart_{row['‡∏ä‡∏∑‡πà‡∏≠']}")):
            if "cart" not in st.session_state:
                st.session_state["cart"] = {}
            st.session_state["cart"][row['‡∏ä‡∏∑‡πà‡∏≠']] = st.session_state[qty_key]

# ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
st.subheader("üõçÔ∏è ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")
if "cart" in st.session_state and st.session_state["cart"]:
    total = 0
    for name, qty in st.session_state["cart"].items():
        price = safe_float(df[df["‡∏ä‡∏∑‡πà‡∏≠"] == name]["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"].values[0])
        st.write(f"{name}: {qty} x {price} = {qty * price:.2f} ‡∏ö‡∏≤‡∏ó")
        total += qty * price

    st.markdown(f"**üí∞ ‡∏£‡∏ß‡∏°: {total:.2f} ‡∏ö‡∏≤‡∏ó**")

    if st.button("‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢"):
        now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        for name, qty in st.session_state["cart"].items():
            idx = df[df["‡∏ä‡∏∑‡πà‡∏≠"] == name].index[0]
            out_cell = f"G{idx + 2}"
            old_out = safe_float(df.at[idx, "‡∏≠‡∏≠‡∏Å"])
            new_out = old_out + qty
            sheet.update(out_cell, [[new_out]])

        st.success("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ ‚úÖ")
        st.session_state["cart"] = {}
        for key in list(st.session_state.keys()):
            if key.startswith("qty_"):
                st.session_state[key] = 1
        st.experimental_rerun()
else:
    st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤")

