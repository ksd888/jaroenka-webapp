import streamlit as st
import gspread
from google.oauth2 import service_account
from datetime import datetime
import pandas as pd

# ‚úÖ ‡πÇ‡∏´‡∏•‡∏î credentials
scope = [
    "https://spreadsheets.google.com/feeds",
    "https://www.googleapis.com/auth/spreadsheets",
    "https://www.googleapis.com/auth/drive.file",
    "https://www.googleapis.com/auth/drive"
]
creds = service_account.Credentials.from_service_account_info(
    st.secrets["GCP_SERVICE_ACCOUNT"], scopes=scope)
client = gspread.authorize(creds)

# ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡∏ä‡∏µ‡∏ó
spreadsheet = client.open_by_key("1HVA9mDcDmyxfKvxQd4V5ZkWh4niq33PwVGY6gwoKnAE")
sheet = spreadsheet.worksheet("‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô")
sheet_meta = spreadsheet.worksheet("Meta")
sheet_sales = spreadsheet.worksheet("‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢")

# ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏¢‡∏≠‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏≠‡∏≠‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà
now_date = datetime.now().strftime("%Y-%m-%d")
last_date = sheet_meta.acell("B1").value
if last_date != now_date:
    sheet.batch_update([{
        'range': 'F2:G1000',
        'values': [[0, 0]] * 999
    }])
    sheet_meta.update("B1", [[now_date]])

# ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
data = sheet.get_all_records()
df = pd.DataFrame(data)
product_names = sorted(df["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"].dropna().tolist())

# ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î session_state
st.session_state.setdefault("cart", [])
st.session_state.setdefault("paid_input", 0.0)

# ‚úÖ UI ‡∏´‡∏•‡∏±‡∏Å
st.title("üßä ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ - ‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏Ñ‡πâ‡∏≤")
st.header("üõí ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")

selected_items = st.multiselect("üîç ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", product_names)
quantities = {}

for name in selected_items:
    qty = st.number_input(f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô - {name}", min_value=1, step=1, key=f"qty_{name}")
    quantities[name] = qty

if st.button("‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤"):
    for name in selected_items:
        item = df[df["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] == name].iloc[0]
        try:
            price = float(pd.to_numeric(item["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"], errors='coerce'))
            cost = float(pd.to_numeric(item["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"], errors='coerce'))
            qty = quantities[name]
            st.session_state["cart"].append({
                "name": name,
                "qty": qty,
                "price": price,
                "cost": cost
            })
        except:
            st.warning(f"‚ö†Ô∏è {name} ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏î‡πâ (‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á)")
    st.success("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß")
    st.stop()

# ‚úÖ ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
if st.session_state["cart"]:
    st.subheader("üßæ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢")
    total, profit_total = 0, 0
    for item in st.session_state["cart"]:
        subtotal = item["qty"] * item["price"]
        profit = item["qty"] * (item["price"] - item["cost"])
        total += subtotal
        profit_total += profit
        st.write(f"- {item['name']} x {item['qty']} = {subtotal:.2f} ‡∏ö‡∏≤‡∏ó")

    st.info(f"üíµ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: {total:.2f} ‡∏ö‡∏≤‡∏ó | üü¢ ‡∏Å‡∏≥‡πÑ‡∏£: {profit_total:.2f} ‡∏ö‡∏≤‡∏ó")
    paid = st.number_input("üí∞ ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô", min_value=0.0, step=1.0, key="paid_input")
    if paid >= total:
        st.success(f"‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô: {paid - total:.2f} ‡∏ö‡∏≤‡∏ó")
    else:
        st.warning("‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏û‡∏≠")

    if st.button("‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢"):
        for item in st.session_state["cart"]:
            idx = df[df["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] == item["name"]].index[0] + 2
            qty = item["qty"]
            price = item["price"]
            cost = item["cost"]
            subtotal = round(qty * price, 2)
            profit = round(qty * (price - cost), 2)

            sheet.update_cell(idx, 7, int(sheet.cell(idx, 7).value or 0) + qty)
            sheet.update_cell(idx, 5, int(sheet.cell(idx, 5).value or 0) - qty)

            sheet_sales.append_row([
                now_date, item["name"], qty, subtotal, profit
            ])

        st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
        st.session_state["cart"].clear()
        st.session_state["paid_input"] = 0.0
        st.stop()

# ‚úÖ ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
with st.expander("üì¶ ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"):
    item = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", product_names, key="restock_item")
    amount = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô", min_value=1, step=1, key="restock_qty")
    if st.button("üì• ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"):
        idx = df[df["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] == item].index[0] + 2
        sheet.update_cell(idx, 6, int(sheet.cell(idx, 6).value or 0) + amount)
        sheet.update_cell(idx, 5, int(sheet.cell(idx, 5).value or 0) + amount)
        st.success(f"‚úÖ ‡πÄ‡∏ï‡∏¥‡∏° {item} ‡πÅ‡∏•‡πâ‡∏ß")

# ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
with st.expander("‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"):
    item = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£", product_names, key="edit_item")
    idx = df[df["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] == item].index[0] + 2
    row = df[df["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] == item].iloc[0]

    def safe_float(v): 
        try: return float(pd.to_numeric(v, errors='coerce') or 0.0)
        except: return 0.0

    def safe_int(v): 
        try: return int(pd.to_numeric(v, errors='coerce') or 0)
        except: return 0

    price_val = safe_float(row["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"])
    cost_val = safe_float(row["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"])
    stock_val = safe_int(row["‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠"])

    new_price = st.number_input("‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà", value=price_val)
    new_cost = st.number_input("‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡πÉ‡∏´‡∏°‡πà", value=cost_val)
    new_stock = st.number_input("‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà", value=stock_val, step=1)

    if st.button("üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç"):
        sheet.update_cell(idx, 3, new_price)
        sheet.update_cell(idx, 4, new_cost)
        sheet.update_cell(idx, 5, new_stock)
        st.success(f"‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï {item} ‡πÅ‡∏•‡πâ‡∏ß")
