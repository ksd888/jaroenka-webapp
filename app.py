import streamlit as st
import pandas as pd
import gspread
from google.oauth2.service_account import Credentials
from datetime import datetime

# ======================
# üîí ‡πÉ‡∏ä‡πâ Service Account
# ======================
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
credentials = Credentials.from_service_account_info(
    st.secrets["GCP_SERVICE_ACCOUNT"], scopes=scope
)
gc = gspread.authorize(credentials)
spreadsheet = gc.open_by_key("1HVA9mDcDmyxfKvxQd4V5ZkWh4niq33PwVGY6gwoKnAE")
sheet = spreadsheet.worksheet("‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô")

# ======================
# üß† ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏™‡∏£‡∏¥‡∏°
# ======================
def safe_float(val):
    try:
        return float(val)
    except:
        return 0.0

def safe_key(name):
    return name.replace(" ", "_").replace(".", "_")

# ======================
# üì¶ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
# ======================
rows = sheet.get_all_records()
df = pd.DataFrame(rows)

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
required_cols = ["‡∏ä‡∏∑‡πà‡∏≠", "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢", "‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô", "‡∏Å‡∏≥‡πÑ‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢", "‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠", "‡πÄ‡∏Ç‡πâ‡∏≤", "‡∏≠‡∏≠‡∏Å", "‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ", "‡∏Å‡∏≥‡πÑ‡∏£", "‡∏™‡∏ï‡πä‡∏≠‡∏Å‡∏™‡∏≥‡∏£‡∏≠‡∏á"]
for col in required_cols:
    if col not in df.columns:
        st.error(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå: {col}")
        st.stop()

# ‡∏™‡∏£‡πâ‡∏≤‡∏á session_state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
if "cart" not in st.session_state:
    st.session_state.cart = {}

# ======================
# üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
# ======================
st.title("üßÉ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ - ‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏Ñ‡πâ‡∏≤")
search_term = st.text_input("üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", "")
filtered_df = df[df["‡∏ä‡∏∑‡πà‡∏≠"].str.contains(search_term, case=False, na=False)] if search_term else df

# ======================
# üõí ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
# ======================
st.subheader("üõí ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")
for index, row in filtered_df.iterrows():
    name = row["‡∏ä‡∏∑‡πà‡∏≠"]
    price = safe_float(row["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"])
    key_add = f"add_{safe_key(name)}"
    key_qty = f"qty_{safe_key(name)}"

    col1, col2, col3 = st.columns([4, 1, 2])
    with col1:
        st.markdown(f"**{name}**")
    with col2:
        if st.button("+", key=key_add):
            st.session_state.cart[name] = st.session_state.cart.get(name, 0) + 1
    with col3:
        if name in st.session_state.cart:
            st.markdown(f"x {st.session_state.cart[name]}")

# ======================
# üßæ ‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
# ======================
st.markdown("---")
st.subheader("üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢")
total = 0
profit = 0
for name, qty in st.session_state.cart.items():
    row = df[df["‡∏ä‡∏∑‡πà‡∏≠"] == name].iloc[0]
    price = safe_float(row["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"])
    cost = safe_float(row["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"])
    line_total = price * qty
    line_profit = (price - cost) * qty
    st.write(f"- {name} x {qty} = {line_total:.0f} ‡∏ö‡∏≤‡∏ó (‡∏Å‡∏≥‡πÑ‡∏£ {line_profit:.0f})")
    total += line_total
    profit += line_profit

st.markdown(f"üíµ **‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {total:.0f} ‡∏ö‡∏≤‡∏ó**")
st.markdown(f"üìà **‡∏Å‡∏≥‡πÑ‡∏£‡∏™‡∏∏‡∏ó‡∏ò‡∏¥: {profit:.0f} ‡∏ö‡∏≤‡∏ó**")

# ======================
# ‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
# ======================
if st.button("‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢"):
    now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    sheet_sales = spreadsheet.worksheet("‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢")
    for name, qty in st.session_state.cart.items():
        row = df[df["‡∏ä‡∏∑‡πà‡∏≠"] == name].iloc[0]
        price = safe_float(row["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"])
        cost = safe_float(row["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"])
        line_total = price * qty
        line_profit = (price - cost) * qty
        sheet_sales.append_row([now, name, qty, price, cost, line_total, line_profit, "drink"])
    st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
    st.session_state.cart = {}  # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    st.experimental_rerun()

