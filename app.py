import streamlit as st
import pandas as pd
import datetime
import gspread
from google.oauth2 import service_account
from reportlab.pdfgen import canvas
from io import BytesIO
import base64

# üîê ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheets
credentials = service_account.Credentials.from_service_account_info(
    st.secrets["GCP_SERVICE_ACCOUNT"],
    scopes=["https://www.googleapis.com/auth/spreadsheets"]
)
gc = gspread.authorize(credentials)
spreadsheet = gc.open("‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô‡∏õ‡∏•‡∏µ‡∏Å_GS")
sheet_main = spreadsheet.worksheet("‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô")
sheet_sales = spreadsheet.worksheet("‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢")

# ‚úÖ Sheet ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏µ‡πÄ‡∏ã‡∏ï
try:
    sheet_meta = spreadsheet.worksheet("Meta")
except:
    sheet_meta = spreadsheet.add_worksheet(title="Meta", rows="10", cols="5")
    sheet_meta.update("A1", "last_date")
    sheet_meta.update("B1", datetime.date.today().isoformat())

# üóì ‡∏£‡∏µ‡πÄ‡∏ã‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà
now_date = datetime.date.today().isoformat()
last_date = sheet_meta.acell("B1").value

if last_date != now_date:
    data = pd.DataFrame(sheet_main.get_all_records())
    data["‡πÄ‡∏Ç‡πâ‡∏≤"] = 0
    data["‡∏≠‡∏≠‡∏Å"] = 0
    sheet_main.update([data.columns.values.tolist()] + data.values.tolist())
    sheet_meta.update("B1", now_date)

# üì¶ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
data = pd.DataFrame(sheet_main.get_all_records())
for col in ["‡πÄ‡∏Ç‡πâ‡∏≤", "‡∏≠‡∏≠‡∏Å", "‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ", "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢", "‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]:
    data[col] = pd.to_numeric(data[col], errors="coerce").fillna(0)

# üñº UI
st.set_page_config(page_title="‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏Ñ‡πâ‡∏≤", layout="wide")
st.title("üßä ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô - ‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏Ñ‡πâ‡∏≤")

# üõí ‡∏Ç‡∏≤‡∏¢‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
st.header("üõç ‡∏Ç‡∏≤‡∏¢‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
selected_items = st.multiselect("‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"].tolist())
quantities = {}

if selected_items:
    for item in selected_items:
        qty = st.number_input(f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢ - {item}", min_value=0, step=1, key=f"sell_{item}")
        quantities[item] = qty

amount_paid = st.number_input("üíµ ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏≤‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (‡∏ö‡∏≤‡∏ó)", min_value=0.0, step=1.0)

if st.button("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢"):
    total_price = 0
    total_profit = 0
    now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    for item, qty in quantities.items():
        if qty == 0:
            continue
        idx = data[data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] == item].index[0]
        if data.at[idx, "‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ"] >= qty:
            data.at[idx, "‡∏≠‡∏≠‡∏Å"] += qty
            data.at[idx, "‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ"] -= qty
            profit_unit = data.at[idx, "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] - data.at[idx, "‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]
            profit = qty * profit_unit
            total_price += qty * data.at[idx, "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"]
            total_profit += profit
            sheet_sales.append_row([
                now, item, qty,
                float(data.at[idx, "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"]),
                float(data.at[idx, "‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]),
                float(profit_unit),
                float(profit)
            ])
        else:
            st.warning(f"‚ùó ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ {item} ‡πÑ‡∏°‡πà‡∏û‡∏≠‡∏Ç‡∏≤‡∏¢ (‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {data.at[idx, '‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ']})")

    change = amount_paid - total_price
    st.success(f"‚úÖ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: {total_price:,.2f} ‡∏ö‡∏≤‡∏ó | üí∏ ‡∏ó‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: {change:,.2f} ‡∏ö‡∏≤‡∏ó")

    # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏•‡∏±‡∏ö‡∏ä‡∏µ‡∏ó
    sheet_main.update([data.columns.values.tolist()] + data.values.tolist())

    # üßæ ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à PDF
    pdf = BytesIO()
    c = canvas.Canvas(pdf)
    c.setFont("Helvetica", 12)
    c.drawString(200, 800, "üßä ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏Ñ‡πâ‡∏≤")
    c.drawString(100, 780, f"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {now}")
    y = 750
    for item, qty in quantities.items():
        if qty > 0:
            idx = data[data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] == item].index[0]
            price = data.at[idx, "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"]
            c.drawString(100, y, f"{item} x {qty} = {qty * price:.2f} ‡∏ö‡∏≤‡∏ó")
            y -= 20
    c.drawString(100, y - 20, f"‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô: {total_price:.2f} ‡∏ö‡∏≤‡∏ó")
    c.drawString(100, y - 40, f"‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô: {change:.2f} ‡∏ö‡∏≤‡∏ó")
    c.save()
    b64 = base64.b64encode(pdf.getvalue()).decode()
    href = f'<a href="data:application/octet-stream;base64,{b64}" download="receipt.pdf">üñ® ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à</a>'
    st.markdown(href, unsafe_allow_html=True)

# ‚ûï ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
st.header("üì¶ ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏ï‡∏π‡πâ")
col1, col2 = st.columns(2)
with col1:
    item_add = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"], key="add_select")
with col2:
    qty_add = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡∏¥‡∏°", min_value=0, step=1, key="add_qty")

if st.button("üìå ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πä‡∏≠‡∏Å"):
    idx = data[data["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] == item_add].index[0]
    data.at[idx, "‡πÄ‡∏Ç‡πâ‡∏≤"] += qty_add
    data.at[idx, "‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏π‡πâ"] += qty_add
    sheet_main.update([data.columns.values.tolist()] + data.values.tolist())
    st.success(f"‚úÖ ‡πÄ‡∏ï‡∏¥‡∏° {item_add} ‡πÅ‡∏•‡πâ‡∏ß +{qty_add}")

# üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢
st.header("üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ")
data["‡∏Å‡∏≥‡πÑ‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢"] = data["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] - data["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]
data["‡∏Å‡∏≥‡πÑ‡∏£"] = data["‡∏≠‡∏≠‡∏Å"] * data["‡∏Å‡∏≥‡πÑ‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢"]
total_sales = (data["‡∏≠‡∏≠‡∏Å"] * data["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"]).sum()
total_profit = data["‡∏Å‡∏≥‡πÑ‡∏£"].sum()
st.metric("‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°", f"{total_sales:,.2f} ‡∏ö‡∏≤‡∏ó")
st.metric("‡∏Å‡∏≥‡πÑ‡∏£‡∏£‡∏ß‡∏°", f"{total_profit:,.2f} ‡∏ö‡∏≤‡∏ó")

# üìã ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
st.dataframe(data, use_container_width=True)
