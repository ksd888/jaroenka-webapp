import streamlit as st
import pandas as pd
import gspread
from google.oauth2.service_account import Credentials
from datetime import datetime

# === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô error ===
def safe_float(val):
    try:
        return float(val)
    except:
        return 0.0

def safe_int(val):
    try:
        return int(val)
    except:
        return 0

def safe_key(name):
    return "".join(c if c.isalnum() else "_" for c in name)

# === ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° Google Sheet ===
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
credentials = Credentials.from_service_account_info(st.secrets["GCP_SERVICE_ACCOUNT"], scopes=scope)
gc = gspread.authorize(credentials)
spreadsheet = gc.open_by_key("1HVA9mDcDmyxfKvxQd4V5ZkWh4niq33PwVGY6gwoKnAE")
sheet = spreadsheet.worksheet("‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô")

# === ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ä‡∏µ‡∏ó ===
rows = sheet.get_all_records()
products = []
for row in rows:
    products.append({
        "‡∏ä‡∏∑‡πà‡∏≠": row.get("‡∏ä‡∏∑‡πà‡∏≠", ""),
        "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢": safe_float(row.get("‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢")),
        "‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô": safe_float(row.get("‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô")),
        "‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠": safe_int(row.get("‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠")),
        "‡πÄ‡∏Ç‡πâ‡∏≤": safe_int(row.get("‡πÄ‡∏Ç‡πâ‡∏≤")),
        "‡∏≠‡∏≠‡∏Å": safe_int(row.get("‡∏≠‡∏≠‡∏Å")),
    })

# === ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ===
if "cart" not in st.session_state:
    st.session_state.cart = {}

st.title("üßä ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏Ñ‡πâ‡∏≤")

# === ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ + ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ===
search = st.text_input("üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")
for p in products:
    if search.lower() in p["‡∏ä‡∏∑‡πà‡∏≠"].lower():
        col1, col2, col3 = st.columns([3, 1, 1])
        with col1:
            st.write(f"üßÉ {p['‡∏ä‡∏∑‡πà‡∏≠']}")
        with col2:
            qty_key = f"qty_{safe_key(p['‡∏ä‡∏∑‡πà‡∏≠'])}"
            if qty_key not in st.session_state:
                st.session_state[qty_key] = 1
            if st.button("-", key=f"sub_{safe_key(p['‡∏ä‡∏∑‡πà‡∏≠'])}"):
                st.session_state[qty_key] = max(1, st.session_state[qty_key] - 1)
            st.write(st.session_state[qty_key])
            if st.button("+", key=f"add_{safe_key(p['‡∏ä‡∏∑‡πà‡∏≠'])}"):
                st.session_state[qty_key] += 1
        with col3:
            if st.button("‚ûï ‡πÉ‡∏™‡πà‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤", key=f"addcart_{safe_key(p['‡∏ä‡∏∑‡πà‡∏≠'])}"):
                st.session_state.cart[p["‡∏ä‡∏∑‡πà‡∏≠"]] = st.session_state.cart.get(p["‡∏ä‡∏∑‡πà‡∏≠"], 0) + st.session_state[qty_key]

st.markdown("---")
st.subheader("üß∫ ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")

total_price = 0
total_profit = 0

for name, qty in st.session_state.cart.items():
    for p in products:
        if p["‡∏ä‡∏∑‡πà‡∏≠"] == name:
            price = p["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] * qty
            profit = (p["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] - p["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]) * qty
            st.write(f"{name} √ó {qty} = {price:.2f} ‡∏ö‡∏≤‡∏ó (‡∏Å‡∏≥‡πÑ‡∏£ {profit:.2f})")
            total_price += price
            total_profit += profit
            break

st.write(f"üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: {total_price:.2f} ‡∏ö‡∏≤‡∏ó | üßæ ‡∏Å‡∏≥‡πÑ‡∏£‡∏™‡∏∏‡∏ó‡∏ò‡∏¥: {total_profit:.2f} ‡∏ö‡∏≤‡∏ó")

# === ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢ ===
if st.button("‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢"):
    now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    for name, qty in st.session_state.cart.items():
        for i, p in enumerate(products):
            if p["‡∏ä‡∏∑‡πà‡∏≠"] == name:
                new_out = p["‡∏≠‡∏≠‡∏Å"] + qty
                out_cell = f"G{i+2}"
                new_balance = p["‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠"] - qty
                bal_cell = f"E{i+2}"
                sheet.update(out_cell, [[new_out]])
                sheet.update(bal_cell, [[new_balance]])
                # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢
                sale_sheet = spreadsheet.worksheet("‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢")
                sale_sheet.append_row([now, name, qty, p["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"], p["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"], p["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] * qty, (p["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] - p["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]) * qty, "drink"])
    st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
    st.session_state.cart = {}
    st.rerun()
