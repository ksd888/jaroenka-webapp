
import streamlit as st
import gspread
from google.oauth2.service_account import Credentials
import datetime

# ‚úÖ ‡πÉ‡∏ä‡πâ secrets ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Streamlit
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
credentials = Credentials.from_service_account_info(st.secrets["GCP_SERVICE_ACCOUNT"], scopes=scope)
gc = gspread.authorize(credentials)

# ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡∏ä‡∏µ‡∏ó
spreadsheet_id = "1HVA9mDcDmyxfKvxQd4V5ZkWh4niq33PwVGY6gwoKnAE"
sheet = gc.open_by_key(spreadsheet_id).worksheet("‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô")

# ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheet
data = sheet.get_all_records()

# ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô float error
def safe_float(value):
    try:
        return float(value)
    except (ValueError, TypeError):
        return 0.0

# ‚úÖ ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ö‡∏ö‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
products = []
for row in data:
    if "‡∏ä‡∏∑‡πà‡∏≠" in row:
        products.append({
            "‡∏ä‡∏∑‡πà‡∏≠": row.get("‡∏ä‡∏∑‡πà‡∏≠", ""),
            "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢": safe_float(row.get("‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢")),
            "‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô": safe_float(row.get("‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô")),
            "‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠": safe_float(row.get("‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠")),
            "‡πÄ‡∏Ç‡πâ‡∏≤": safe_float(row.get("‡πÄ‡∏Ç‡πâ‡∏≤")),
            "‡∏≠‡∏≠‡∏Å": safe_float(row.get("‡∏≠‡∏≠‡∏Å")),
        })

# ‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Streamlit UI
st.title("üßä ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ - ‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏Ñ‡πâ‡∏≤")

# ‚úÖ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
selected = st.multiselect("üîç ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏Ç‡∏≤‡∏¢", [p["‡∏ä‡∏∑‡πà‡∏≠"] for p in products])
cart = {name: 0 for name in selected}

for name in selected:
    col1, col2, col3 = st.columns([3,1,1])
    with col1:
        st.write(name)
    with col2:
        if st.button("-", key=f"dec_{name}"):
            cart[name] = max(cart[name] - 1, 0)
    with col3:
        if st.button("+", key=f"inc_{name}"):
            cart[name] += 1

# ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
if st.button("‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤"):
    st.session_state["cart"] = cart.copy()

# ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
st.subheader("üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢")
cart = st.session_state.get("cart", {})
total = 0.0
profit = 0.0

for name, qty in cart.items():
    for p in products:
        if p["‡∏ä‡∏∑‡πà‡∏≠"] == name:
            price = p["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"]
            cost = p["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]
            subtotal = qty * price
            gain = qty * (price - cost)
            total += subtotal
            profit += gain
            st.write(f"- {name} x {qty} = {subtotal:.2f} ‡∏ö‡∏≤‡∏ó")
            break

st.markdown(f"üíµ **‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°:** {total:.2f} ‡∏ö‡∏≤‡∏ó | üü¢ **‡∏Å‡∏≥‡πÑ‡∏£:** {profit:.2f} ‡∏ö‡∏≤‡∏ó")

# ‚úÖ ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô
amount = st.number_input("üí∞ ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô", min_value=0.0, step=1.0)
if amount < total:
    st.warning("üí∏ ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏û‡∏≠")
else:
    change = amount - total
    st.success(f"‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô: {change:.2f} ‡∏ö‡∏≤‡∏ó")

# ‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
if st.button("‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢"):
    now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    for name, qty in cart.items():
        for i, row in enumerate(data):
            if row.get("‡∏ä‡∏∑‡πà‡∏≠") == name:
                out_cell = f"G{i+2}"
                new_out = row.get("‡∏≠‡∏≠‡∏Å", 0) + qty
                sheet.update(out_cell, [[new_out]])
                break
    st.session_state["cart"] = {}  # ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
    st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
