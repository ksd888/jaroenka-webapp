import streamlit as st
import pandas as pd
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ credentials ‡∏î‡πâ‡∏ß‡∏¢ secrets
import json
from io import StringIO

# ‡πÇ‡∏´‡∏•‡∏î service account ‡∏à‡∏≤‡∏Å secrets
service_account_json = st.secrets["GCP_SERVICE_ACCOUNT"]
creds_dict = json.loads(service_account_json)
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
client = gspread.authorize(creds)

# ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° Google Sheet
sheet = client.open("‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô‡∏õ‡∏•‡∏µ‡∏Å_GS").worksheet("‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô")
data = sheet.get_all_records()
df = pd.DataFrame(data)

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
if "sales_log" not in st.session_state:
    st.session_state.sales_log = []

# ‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á
st.title("‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô (‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏Ñ‡πâ‡∏≤) üßä")

# ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
search = st.text_input("üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")
if search:
    df = df[df["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"].str.contains(search, case=False, na=False)]

# ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
st.dataframe(df, use_container_width=True)

# üì¶ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
st.subheader("üì¶ ‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")
selected_items = st.multiselect("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢", df["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"].tolist())
quantities = {}

for item in selected_items:
    quantities[item] = st.number_input(f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢ - {item}", min_value=1, step=1, key=item)

if st.button("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢"):
    for item in selected_items:
        row = df[df["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] == item].iloc[0]
        quantity = quantities[item]
        profit_per_unit = row["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] - row["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]
        total_profit = profit_per_unit * quantity
        total_sale = row["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] * quantity
        now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÑ‡∏õ Sheet2 (‡∏£‡∏∞‡∏ö‡∏∏ type ‡πÄ‡∏õ‡πá‡∏ô drink)
        client.open("‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô‡∏õ‡∏•‡∏µ‡∏Å_GS").worksheet("Sheet2").append_row([
            now, item, quantity, row["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"], row["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"],
            total_sale, total_profit, "drink"
        ])

        # ‡πÄ‡∏Å‡πá‡∏ö log ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Undo
        st.session_state.sales_log.append((item, quantity))

    st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

# üîÅ Undo
if st.button("‚Ü©Ô∏è Undo ‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î") and st.session_state.sales_log:
    undone = st.session_state.sales_log.pop()
    st.warning(f"‚õî ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢: {undone[0]} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {undone[1]} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡πÇ‡∏õ‡∏£‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏ô Google Sheet ‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á)")

# ‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
st.subheader("‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà")
with st.expander("‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"):
    new_name = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà")
    new_price = st.number_input("‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢", min_value=0)
    new_cost = st.number_input("‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô", min_value=0)
    if st.button("üìå ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"):
        profit = new_price - new_cost
        sheet.append_row([new_name, 0, new_price, new_cost, profit])
        st.success("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤")

# ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
st.subheader("‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏î‡∏¥‡∏°")
selected_edit = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç", df["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"].tolist())
edit_row = df[df["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] == selected_edit].iloc[0]
new_edit_price = st.number_input("‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢", value=int(edit_row["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"]))
new_edit_cost = st.number_input("‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô", value=int(edit_row["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]))

if st.button("üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç"):
    index = df[df["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] == selected_edit].index[0] + 2  # +2 ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏°‡∏µ header
    profit = new_edit_price - new_edit_cost
    sheet.update(f"C{index}:E{index}", [[new_edit_price, new_edit_cost, profit]])
    st.success("üìù ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤")

# üí∞ ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô session
st.subheader("üí∞ ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ")
if st.session_state.sales_log:
    total_items = sum(q for _, q in st.session_state.sales_log)
    total_profit = 0
    total_sales = 0
    for item, quantity in st.session_state.sales_log:
        row = df[df["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] == item].iloc[0]
        total_sales += row["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] * quantity
        total_profit += (row["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] - row["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]) * quantity

    st.markdown(f"**üõí ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°: {total_sales} ‡∏ö‡∏≤‡∏ó**")
    st.markdown(f"**üìà ‡∏Å‡∏≥‡πÑ‡∏£‡∏™‡∏∏‡∏ó‡∏ò‡∏¥: {total_profit} ‡∏ö‡∏≤‡∏ó**")
else:
    st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ")
