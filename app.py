import streamlit as st
import pandas as pd
from google.oauth2 import service_account
import gspread
from datetime import datetime
import json

# ‡πÉ‡∏ä‡πâ Google Auth ‡πÅ‡∏ó‡∏ô oauth2client
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
credentials = service_account.Credentials.from_service_account_info(
    st.secrets["GCP_SERVICE_ACCOUNT"], scopes=scope
)
gc = gspread.authorize(credentials)
sheet = gc.open_by_key("1HVA9mDcDmyxfKvxQd4V5ZkWh4niq33PwVGY6gwoKnAE")
worksheet = sheet.worksheet("‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô")
sale_sheet = sheet.worksheet("‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢")

st.set_page_config(page_title="‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏Ñ‡πâ‡∏≤ - ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", layout="centered")

st.markdown("## üßä ‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏Ñ‡πâ‡∏≤ - ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")

@st.cache_data
def load_data():
    df = pd.DataFrame(worksheet.get_all_records())
    return df

df = load_data()
df["‡∏Å‡∏≥‡πÑ‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢"] = df["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"] - df["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]

# ------------------- UI -------------------
search_term = st.text_input("üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", "")

filtered_df = df[df["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"].str.contains(search_term, case=False, na=False)]

cart = st.session_state.get("cart", {})

for _, row in filtered_df.iterrows():
    name = row["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"]
    if name not in cart:
        cart[name] = 0

    col1, col2, col3 = st.columns([1,1,5])
    with col1:
        if st.button("-", key=f"sub_{name}"):
            if cart[name] > 0:
                cart[name] -= 1
    with col2:
        if st.button("+", key=f"add_{name}"):
            cart[name] += 1
    with col3:
        st.write(f"**{name} (‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {cart[name]})**")

st.session_state["cart"] = cart

if st.button("‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤"):
    st.success("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß")

# ---------------- ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ----------------
st.markdown("### üß∫ ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")

total = 0
profit = 0
sell_rows = []

for name, qty in cart.items():
    if qty > 0:
        row = df[df["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] == name].iloc[0]
        price = row["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"]
        cost = row["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]
        subtotal = price * qty
        subprofit = (price - cost) * qty
        total += subtotal
        profit += subprofit
        st.write(f"- {name} x {qty} = {subtotal:.2f} ‡∏ö‡∏≤‡∏ó")
        sell_rows.append({
            "‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤": name,
            "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô": qty,
            "‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢": subtotal,
            "‡∏Å‡∏≥‡πÑ‡∏£": subprofit,
            "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà": datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        })

st.markdown(f"### üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: {total:.2f} ‡∏ö‡∏≤‡∏ó")
st.markdown(f"### üìà ‡∏Å‡∏≥‡πÑ‡∏£: {profit:.2f} ‡∏ö‡∏≤‡∏ó")

if st.button("‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢"):
    for r in sell_rows:
        try:
            sale_sheet.append_row(list(r.values()))
        except:
            st.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÑ‡∏î‡πâ")
    st.success("‚úÖ ‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
    st.session_state["cart"] = {}
    st.experimental_rerun()
