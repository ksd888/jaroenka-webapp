import streamlit as st
import pandas as pd
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime

# ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name("service_account.json", scope)
client = gspread.authorize(creds)
spreadsheet = client.open_by_key("1HVA9mDcDmyxfKvxQd4V5ZkWh4niq33PwVGY6gwoKnAE")
sheet = spreadsheet.worksheet("‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô")

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
data = sheet.get_all_records()
df = pd.DataFrame(data)

st.title("üßä ‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏Ñ‡πâ‡∏≤ - ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")

# ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
search_term = st.text_input("üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", "")
filtered_df = df[df["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"].str.contains(search_term, case=False, na=False)]

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
if "cart" not in st.session_state:
    st.session_state.cart = {}

# ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
for index, row in filtered_df.iterrows():
    st.markdown(f"**{row['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤']}**")
    col1, col2, col3 = st.columns([1, 1, 2])
    with col1:
        if st.button("-", key=f"sub_{row['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤']}"):
            if row['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'] in st.session_state.cart and st.session_state.cart[row['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤']] > 0:
                st.session_state.cart[row['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤']] -= 1
    with col2:
        qty = st.session_state.cart.get(row['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'], 0)
        st.markdown(f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: **{qty}**")
    with col3:
        if st.button("+", key=f"add_{row['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤']}"):
            st.session_state.cart[row['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤']] = st.session_state.cart.get(row['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'], 0) + 1

st.markdown("---")
st.subheader("üõí ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")

# ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
total_price = 0
total_profit = 0
for product, qty in st.session_state.cart.items():
    item_row = df[df["‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"] == product].iloc[0]
    price = item_row["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"]
    cost = item_row["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô"]
    profit = (price - cost) * qty
    total = price * qty
    st.write(f"{product} x {qty} = {total:.2f} ‡∏ö‡∏≤‡∏ó")
    total_price += total
    total_profit += profit

st.info(f"üì¶ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: {total_price:.2f} ‡∏ö‡∏≤‡∏ó üü¢ ‡∏Å‡∏≥‡πÑ‡∏£: {total_profit:.2f} ‡∏ö‡∏≤‡∏ó")

# ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô
money = st.number_input("üí∞ ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô", min_value=0.0, format="%.2f")
if money < total_price:
    st.warning("‚ùå ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏û‡∏≠")
else:
    if st.button("‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢"):
        now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        for product, qty in st.session_state.cart.items():
            sheet.insert_row([now, product, qty], index=2)
        st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
        st.session_state.cart = {}  # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
        st.experimental_rerun()
